"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),g=r,d=m["".concat(s,".").concat(g)]||m[g]||p[g]||o;return n?a.createElement(d,i(i({ref:t},c),{},{components:n})):a.createElement(d,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6567:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:1,title:"Custom Objects",description:"Save and get custom objects in Rtag"},s=void 0,u={unversionedId:"rtag/feature/custom-objects",id:"rtag/feature/custom-objects",title:"Custom Objects",description:"Save and get custom objects in Rtag",source:"@site/docs/rtag/feature/custom-objects.md",sourceDirName:"rtag/feature",slug:"/rtag/feature/custom-objects",permalink:"/rtag/feature/custom-objects",draft:!1,editUrl:"https://github.com/saicone/docs/blob/master/docs/rtag/feature/custom-objects.md",tags:[],version:"current",lastUpdatedBy:"Rubenicos",lastUpdatedAt:1652214185,formattedLastUpdatedAt:"5/10/2022",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Custom Objects",description:"Save and get custom objects in Rtag"},sidebar:"rtag",previous:{title:"Features",permalink:"/rtag/feature/"},next:{title:"Tag Stream",permalink:"/rtag/feature/stream"}},c={},p=[{value:"Information",id:"information",level:2},{value:"RtagSerializer",id:"rtagserializer",level:3},{value:"RtagDeserializer",id:"rtagdeserializer",level:3},{value:"Example",id:"example",level:2}],m={toc:p};function g(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"information"},"Information"),(0,o.kt)("p",null,"Rtag by default only has support for normal Java objects (String, Integer, List... etc), if you want to set and get custom objects you need to register a (de)serializer into Rtag instance."),(0,o.kt)("h3",{id:"rtagserializer"},"RtagSerializer"),(0,o.kt)("p",null,"Instance to convert a custom object into Map."),(0,o.kt)("h3",{id:"rtagdeserializer"},"RtagDeserializer"),(0,o.kt)("p",null,"Instance to convert a Map into a custom object."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Suppose you have this custom object to save additional data in your items:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"package my.plugin;\n\npublic class CustomData {\n\n    private final String type;\n    private int level;\n    private boolean broken;\n\n    public CustomData(String type, int level, boolean broken) {\n        this.type = type;\n        this.level = level;\n        this.broken = broken;\n    }\n\n    public String getType() {\n        return type;\n    }\n\n    public int getLevel() {\n        return level;\n    }\n\n    public boolean isBroken() {\n        return broken;\n    }\n\n    public void setLevel(int level) {\n        this.level = level;\n    }\n\n    public void setBroken(boolean broken) {\n        this.broken = broken;\n    }\n\n    public boolean equals(Object object) {\n        if (object instanceof CustomData) {\n            CustomData data = (CustomData) object;\n            return data.getType().equals(type) && data.getLevel == level && data.isBroken == broken;\n        }\n        return false;\n    }\n}\n")),(0,o.kt)("p",null,"So you need to create a (de)serializer for it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'package my.plugin;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class CustomDataSerializer implements RtagSerializer<CustomData>, RtagDeserializer<CustomData> {\n    \n    // ID used when the object will be converted into Map.\n    // CustomData -> Map\n    @Override\n    public String getInID() {\n        // It\'s suggested to use an ID with the format <plugin>:<object> to avoid\n        // incompatibility issues with other plugins \n        return "myplugin:CustomData";\n    }\n    \n    // ID used when an Map will be converted into the object.\n    // Map -> CustomData\n    @Override\n    public String getOutID() {\n        // Same ID from above\n        return "myplugin:CustomData";\n    }\n\n    // Convert the CustomData into Map\n    @Override\n    public Map<String, Object> serialize(CustomData data) {\n        Map<String, Object> map = new HashMap();\n        map.put("type", data.getType());\n        map.put("level", data.getLevel());\n        map.put("broken", data.isBroken());\n        return map;\n    }\n    \n    // Convert the Map into CustomData\n    @Override\n    public CustomData deserialize(Map<String, Object> map) {\n        String type = map.get("type");\n        Integer level = map.get("level");\n        Boolean broken = map.get("broken");\n\n        if (type == null || level == null || broken == null) {\n            return null;\n        } else {\n            return new CustomData(type, level, broken);\n        }\n    }\n}\n')),(0,o.kt)("p",null,"The you need to register the (de)serializer into Rtag instance that are you using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"Rtag rtag = // Intance from anywhere;\nCustomDataSerializer serializer = new CustomDataSerializer();\n\nrtag.putSerializer(CustomData.class, serializer);\nrtag.putDeserializer(serializer);\n")),(0,o.kt)("p",null,"Now when you use the Rtag instance with registered CustomDataSerializer, you can set and get the CustomData with simple methods."),(0,o.kt)("p",null,"In this example will be used an RtagItem with Rtag that have the CustomDataSerializer:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ItemStack item = // Item from anywhere;\nRtag rtag = // Instancia with CustomDataSerializer;\n\nRtagItem rtagItem = new RtagItem(rtag, item);\n\n// -- Save custom data into ItemStack\n\n// Data for the item\nCustomData data = new CustomData("EPIC", 30, false);\n// Will be saved at path "custom" -> "data"\nrtagItem.set(data, "custom", "data");\n\n// The changes will be loaded into original item\nrtagItem.load();\n\n\n// -- Get custom data from ItemStack\n\n// The data will be retrieved from "custom" -> "data"\nCustomData itemData = rtagItem.get("custom", "data");\n// Check if it equals\nSystem.out.println(data.equals(itemData));\n')))}g.isMDXComponent=!0}}]);