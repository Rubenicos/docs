"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[148],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},330:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),s=["components"],i={sidebar_position:3,title:"Setup",description:"How configure UClanSync"},c=void 0,l={unversionedId:"uclansync/setup",id:"uclansync/setup",title:"Setup",description:"How configure UClanSync",source:"@site/docs/uclansync/setup.md",sourceDirName:"uclansync",slug:"/uclansync/setup",permalink:"/uclansync/setup",draft:!1,editUrl:"https://github.com/saicone/docs/blob/master/docs/uclansync/setup.md",tags:[],version:"current",lastUpdatedBy:"Rubenicos",lastUpdatedAt:1652214185,formattedLastUpdatedAt:"5/10/2022",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Setup",description:"How configure UClanSync"},sidebar:"uclansync",previous:{title:"Installation",permalink:"/uclansync/installation"},next:{title:"Commands",permalink:"/uclansync/commands"}},u={},p=[{value:"Server",id:"server",level:2},{value:"Addon",id:"addon",level:2},{value:"Messenger",id:"messenger",level:2}],d={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The UClanSync configuration is divided into parts:"),(0,a.kt)("h2",{id:"server"},"Server"),(0,a.kt)("p",null,"This is the most important part of configuration, it's suggested to edit it when you start UClanSync."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# Current server configuration\nServer:\n  # Each server must have the SAME NAME has proxy configuration to make\n  # clan homes work properly across servers\n  Name: 'MySurvival1'\n")),(0,a.kt)("h2",{id:"addon"},"Addon"),(0,a.kt)("p",null,"This configuration part allows you to edit the general options of the addon."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# Addon configuration\nAddon:\n  # Logging level to see messages in console, set 0 to disable all logs\n  # 1 = errors\n  # 2 = errors, warnings\n  # 3 = errors, warnings, info\n  # 4 = errors, warnings, info, debug information\n  LogLevel: 3\n  # Clan updater configuration\n  ClanUpdater:\n    # Delay in ticks to process a clan update (To avoid multiple updates at the same time)\n    # 20 ticks = 1 second\n    Update-Delay: 40\n    # Time in ticks to save an teleport request\n    # 20 ticks = 1 second\n    Teleport-Cache: 200\n    # Time in ticks to tell other servers the players that are connected on current server\n    # 20 ticks = 1 seconds\n    Player-Update: 80\n  # Addon feature list to enable or disable\n  Feature:\n    # Clan homes sync\n    Homes: true\n    # Clan chat sync\n    Chat: true\n")),(0,a.kt)("h2",{id:"messenger"},"Messenger"),(0,a.kt)("p",null,"This configuration part allows you to edit the UClanSync messenger."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# Messenger configuration\nMessenger:\n  # Messaging channel, servers who you want to synchronize clan changes\n  # must have the same channel ID\n  Channel: 'survival:uclansync'\n  # Available messenger types:\n  # - PROXY    = Don't require any type of installation, but your servers\n  #              must be in the same proxy (Bungee or Velocity).\n  # - PLUGIN   = Same has PROXY but require to put UClanSync plugin in\n  #              your proxy instance (And is faster than PROXY type).\n  # - REDIS    = Use a Redis server for messaging (Configure it below).\n  # - RABBITMQ = Use a RabbitMQ server for messaging (Configure it below).\n  Type: 'PROXY'\n  # Redis configuration\n  Redis:\n    # Redis url connection\n    #\n    # URL: redis://[user]:[password@]host[:port][/databaseNumber]\n    url: 'redis://:password@localhost:6379/0'\n  # RabbitMQ configuration\n  RabbitMQ:\n    exchange: 'uclansync'\n    # RabbitMQ url connection\n    # Documentation: https://www.rabbitmq.com/uri-spec.html\n    #\n    # URL: amqp://userName:password@hostName:portNumber/virtualHost\n    # If the virtual host is \"/\", set has \"%2F\"\n    url: 'amqp://guest:guest@localhost:5672/%2F'\n")))}m.isMDXComponent=!0}}]);