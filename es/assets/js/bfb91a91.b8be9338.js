"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[408],{3905:function(e,a,t){t.d(a,{Zo:function(){return u},kt:function(){return m}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?n.createElement(g,i(i({ref:a},u),{},{components:t})):n.createElement(g,i({ref:a},u))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7888:function(e,a,t){t.r(a),t.d(a,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var n=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],s={sidebar_position:3,title:"Estructura",description:"Informaci\xf3n sobre la estructura de Rtag"},l=void 0,c={unversionedId:"rtag/structure",id:"rtag/structure",title:"Estructura",description:"Informaci\xf3n sobre la estructura de Rtag",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/rtag/structure.md",sourceDirName:"rtag",slug:"/rtag/structure",permalink:"/es/rtag/structure",draft:!1,editUrl:"https://github.com/saicone/docs/blob/master/docs/rtag/structure.md",tags:[],version:"current",lastUpdatedBy:"Rubenicos",lastUpdatedAt:1652214185,formattedLastUpdatedAt:"10/5/2022",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Estructura",description:"Informaci\xf3n sobre la estructura de Rtag"},sidebar:"rtag",previous:{title:"Info B\xe1sica",permalink:"/es/rtag/basics"},next:{title:"Caracter\xedsticas",permalink:"/es/rtag/feature/"}},u={},d=[{value:"TagObject",id:"tagobject",level:2},{value:"RtagMirror",id:"rtagmirror",level:2},{value:"Rtag",id:"rtag",level:2},{value:"RtagEditor",id:"rtageditor",level:2},{value:"RtagItem",id:"rtagitem",level:3},{value:"RtagEntity",id:"rtagentity",level:3},{value:"RtagBlock",id:"rtagblock",level:3}],p={toc:d};function m(e){var a=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,s,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Rtag est\xe1 conformado por m\xfaltiples classes que funcionan en conjunto para llevar a cabo acciones, abajo se presenta un mapa conceptal que muestra su distribuci\xf3n."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Rtag Instances",src:t(5137).Z,width:"1810",height:"750"})),(0,o.kt)("h2",{id:"tagobject"},"TagObject"),(0,o.kt)("p",null,"Rtag contiene varias classes para ejecutar m\xe9todos de los objetos NBT manteniendo la compatibilidad entre versiones, incluyendo la conversi\xf3n del respectivo NBT a un objeto normal de Java y viceversa:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"TagCompound:")," Para ejecutar m\xe9todos de NBTTagCompound."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"TagList:")," Para ejecutar m\xe9todos de NBTTagList."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"TagBase:")," Para ejecutar m\xe9todos de cualquier otro class de NBT no mencionado anteriormente.")),(0,o.kt)("h2",{id:"rtagmirror"},"RtagMirror"),(0,o.kt)("p",null,"Es la instancia principal de Rtag para convertir cualquier objeto normal de Java (String, Integer, List, Map) en NBT y viceversa de manera simple sin necesidad de acceder a las classes de TagObject."),(0,o.kt)("h2",{id:"rtag"},"Rtag"),(0,o.kt)("p",null,"Es ni m\xe1s ni menos que el m\xedsmisimo Rtag, con esta instancia puedes editar los NBTTagCompound y NBTTagList de la m\xe1nera m\xe1s simple, puedes a\xf1adir y remover objetos definidos por una ruta dentro de estos NBT."),(0,o.kt)("p",null,"Incluyendo compatibilidad con objetos custom, los cuales deben ser traducidos registrando un serializador y deserializador para cada respectivo objeto, para m\xe1s informaci\xf3n visita la p\xe1gina de la documentaci\xf3n referente a ",(0,o.kt)("a",{parentName:"p",href:"/es/rtag/feature/custom-objects"},"objetos custom"),"."),(0,o.kt)("h2",{id:"rtageditor"},"RtagEditor"),(0,o.kt)("p",null,"Es el class abstracto con opciones para editar de manera simple el tag principal de un objeto."),(0,o.kt)("h3",{id:"rtagitem"},"RtagItem"),(0,o.kt)("p",null,"Permite editar el tag de un ItemStack adem\xe1s de a\xf1adirle data adicional, la cual ser\xe1 guardada al cargar los cambios."),(0,o.kt)("p",null,"Para cargar los cambios dentro del ItemStack es posible creando una copia con los cambios implementados o implementar directamente los cambios en el ItemStack original."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ItemStack item = new ItemStack(Material.DIAMOND_SWORD);\n\nRtagItem rtag = new RtagItem(item);\n// Value = "Texto"\n// Ruta = "ruta" -> "asd"\nrtag.set("Texto 1", "ruta", "asd");\n\n// Puedes cargar los cambios en el item original\nrtag.load();\n// O tambi\xe9n puedes cargar una copia del item original con los cambios incluidos\nItemStack newItem = rtag.loadCopy();\n')),(0,o.kt)("h3",{id:"rtagentity"},"RtagEntity"),(0,o.kt)("p",null,"Permite editar el NBTTagCompound de una entidad, sin incluir el id de la entidad debido a que estas funcionan de una manera excluyente, en otras palabras, si tratas de cambiar el id la entidad seguir\xe1 siendo la misma."),(0,o.kt)("p",null,"La data adicional que no tenga relaci\xf3n con la entidad, ser\xe1 eliminada al cargar los cambios."),(0,o.kt)("p",null,"No es posible cargar los cambios como una copia de la entidad."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Entity entity = // Obtener una entidad de alguna parte;\n\nRtagEntity rtag = new RtagEntity(entity);\n// Aqui se editar\xe1n cosas que contienen las entidades en su NBTTagCompound\nrtag.set((byte) 1, "Glowing");\n// Value = "1"\n// Ruta = "HasVisualFire"\nrtag.set((byte) 1, "HasVisualFire");\n\n// Cargar los cambios\nrtag.load();\n')),(0,o.kt)("h3",{id:"rtagblock"},"RtagBlock"),(0,o.kt)("p",null,"Permite editar el NBTTagCompound de un bloque, los bloques con data de este estilo son muy pocos (cofres, mesas de encantamiento... etc)."),(0,o.kt)("p",null,"La data adicional que no tenga relaci\xf3n con el bloque, ser\xe1 eliminada al cargar los cambios."),(0,o.kt)("p",null,"No es posible cargar los cambios como una copia del bloque."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'Block block = // Obtener un bloque de alguna parte;\n\nRtagBlock rtag = new RtagBlock(block);\n// Supongamos que el bloque es un cofre,\n// se puede editar el nombre que aparece al abrirlo\nrtag.set("{\\"color\\":\\"dark_purple\\",\\"text\\":\\"Nombre del cofre\\"}", "CustomName");\n\n// Cargar los cambios\nrtag.load();\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'Si quieres a\xf1adirle data que no se borre a las entidades y/o bloques, se sugiere usar el "',(0,o.kt)("a",{parentName:"p",href:"https://www.spigotmc.org/threads/guide.371200/"},"persistent data container"),'" que fue a\xf1adido en la 1.14.'),(0,o.kt)("p",{parentName:"div"},"Para versiones viejas, por ahora Rtag no ofrece una forma viable de guardar data adicional en las entidades y/o bloques."))))}m.isMDXComponent=!0},5137:function(e,a,t){a.Z=t.p+"assets/images/rtag-instances-8cdc923d1b20875d9071af314c76a103.png"}}]);